#!/bin/bash
set -e
#set -x

PERF_MAP_DIR=$(dirname $(readlink -f $0))/..
PID=$1

if [ -z "$PERF_JAVA_TMP" ]; then
  PERF_JAVA_TMP=/tmp
fi

if [ -z "$PERF_RECORD_SECONDS" ]; then
  PERF_RECORD_SECONDS=15
fi

if [ -z "$PERF_RECORD_FREQ" ]; then
  PERF_RECORD_FREQ=99
fi

if [ -z "$PERF_DATA_FILE" ]; then
  PERF_DATA_FILE=$PERF_JAVA_TMP/perf-$PID.data
fi

echo "Recording events for $PERF_RECORD_SECONDS seconds (adapt by setting PERF_RECORD_SECONDS)"

kernel_major=$(uname -r | cut -d. -f1)
kernel_minor=$(uname -r | cut -d. -f2)

perf_does_not_ignore_disappearing_threads=$(( $kernel_major < 4 || ($kernel_major == 4 && $kernel_minor < 10) ))
tries=0;

if (( $perf_does_not_ignore_disappearing_threads )); then
    tries=5
    echo "WARNING: perf tools on linux kernels < 4.10 has a race condition (see https://github.com/torvalds/linux/commit/a359c17a7e1a9c99384499cf7b43d80867080789); we will try running it up to $tries times before failing"
fi

while ! sudo perf record -F $PERF_RECORD_FREQ -o $PERF_DATA_FILE -g -p $* -- sleep $PERF_RECORD_SECONDS; do
    if (( tries )); then
      tries=$((tries - 1))
      echo "Failed; retrying ($tries tries left)"
      # Remove $PERF_DATA_FILE, because otherwise perf will rename it 
      # (as root) to $PERF_DATA_FILE.old, which will create confusion and 
      # confound anything trying to copy it (as non-root) later.
      rm -f $PERF_DATA_FILE
    else
      echo "Failed"
      exit 1
    fi
done


$PERF_MAP_DIR/bin/create-java-perf-map.sh $PID "$PERF_MAP_OPTIONS"
